{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mujoo\\\\OneDrive\\\\Documents\\\\GitHub\\\\CapstoneProject\\\\webapp\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { Card, CardBody, CardHeader, CardFooter, Button, Box, Layer, Form, FormField, TextInput } from \"grommet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [token, setToken] = useState('');\n  const [expire, setExpire] = useState('');\n  const [users, setUsers] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fitbitToken();\n    registerFitbit(); //refreshToken();\n    //getUsers();\n    // axios.get('fitbit_register',axiosConfig).then((res) =>\n    //     {\n    //       console.log(res.data);\n    //     });\n  }, []);\n\n  const registerFitbit = async () => {\n    let axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Authorization\": `Bearer ${accessToken}`\n      }\n    };\n\n    try {\n      const response = await axios.get(\"fitbit_register\", axiosConfig); //setAccessToken(response.data.accessToken);\n\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fitbitToken = async () => {\n    try {\n      const response = await axios.post(\"login\", {\n        email_id: \"arko.pal2000@gmail.com\",\n        password: \"12345\"\n      }); //setAccessToken(response.data.accessToken);\n\n      console.log(response.data.access_token);\n      setAccessToken(response.data.access_token);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/token'); // console.log('hello');\n      // console.log(response);\n\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        navigate(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get('http://localhost:5000/token');\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  }); // const getUsers = async () => {\n  //     const response = await axiosJWT.get('http://localhost:5000/users', {\n  //         headers: {\n  //             Authorization: `Bearer ${token}`\n  //         }\n  //     });\n  //     setUsers(response.data);\n  //}\n\n  const handleUpdateEcg = async () => {\n    setUpdateVitals(false);\n    setShowVitals(false);\n    setUpdateEcg(true);\n  };\n\n  const handleUpdateVitals = async () => {\n    setUpdateVitals(true);\n    setShowVitals(false);\n    setUpdateEcg(false);\n  };\n\n  const handleDisplayVitals = async () => {\n    setShowVitals(true);\n    setUpdateEcg(false);\n    setUpdateVitals(false);\n  };\n\n  const [showVitals, setShowVitals] = useState(true);\n  const [updateVitals, setUpdateVitals] = useState(false);\n  const [showEcg, setUpdateEcg] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      direction: \"row\",\n      gap: \"medium\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Display Vitals\",\n          onClick: handleDisplayVitals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Update Vitals\",\n          onClick: handleUpdateVitals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Update ECG\",\n          onClick: handleUpdateEcg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), updateVitals && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(UserDataForm, {\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), showEcg && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ECGform, {\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), showVitals && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(UserDetails, {\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"eztx2p/RKm6IVCVZJ6PklXro9Vs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\n\nconst ECGform = props => {\n  _s2();\n\n  let accessToken = props.accessToken;\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${accessToken}`\n    }\n  };\n  const [files, setFile] = useState(null);\n  const [value, setValue] = useState({});\n\n  const onSubmit = async () => {\n    try {\n      var formData = new FormData();\n      formData.append('file', files[0]);\n      const response = await axios.patch(\"ecg\", formData, axiosConfig);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    value: value,\n    onReset: () => setValue({}),\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      name: \"ecg\",\n      htmlFor: \"text-input-id\",\n      label: \"ECG REPORT\",\n      onChange: e => setFile(e.target.files),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"ecg\",\n        name: \"ecg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      direction: \"row\",\n      gap: \"medium\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        label: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"reset\",\n        label: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 7\n  }, this);\n}; // const UserDataForm = (props) => {\n// const [cp, setcp] = React.useState();\n// const [trtbps, settrtbps] = React.useState();\n// const [chol, setchol] = React.useState();\n// const [fbs, setfbs] = React.useState();\n// const [slp, setslp] = React.useState();\n// const [value,setValue] = useState({});\n//  let accessToken = props.accessToken;\n// let axiosConfig = {\n//     headers: {\n//         'Content-Type': 'application/json;charset=UTF-8',\n//         \"Access-Control-Allow-Origin\": \"*\",\n//         \"Authorization\": `Bearer ${accessToken}`,\n//     }\n//   };\n//   const onSubmit = async() => {\n//     try{\n//     const response = await axios.post(\"user_attr\", {\n//         'cp': cp,\n//         'trtbps': trtbps,\n//         'chol': chol,\n//         'fbs': fbs,\n//         'slp': slp,\n//     }, axiosConfig)\n//     console.log(response);\n//     }\n//     catch(error){\n//         console.log(error);\n//     }\n// }\n//\n\n\n_s2(ECGform, \"M5KSH4qa7m3oGRut7hikWqOrO1U=\");\n\n_c2 = ECGform;\n\nclass UserDataForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      hasAgreed: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let target = event.target;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    let name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"The form was submitted with the following data:\");\n    console.log(this.state);\n  } //\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <Form\n      //   value={value}\n      //   onReset={() => setValue({})}\n      //   onSubmit={onSubmit}\n      // >\n      //   <FormField name=\"cp\" htmlFor=\"text-input-id\" label=\"Chest Pain\" onChange={e => setcp(e.target.value)}>\n      //     <input type=\"number\" id=\"cp\" name=\"name\" />\n      //   </FormField>\n      //   <FormField name=\"trtbps\" htmlFor=\"text-input-id\" label=\"Blood Pressure\" onChange={e => settrtbps(e.target.value)}>\n      //     <input type=\"number\" id=\"trtbps\" name=\"name\" />\n      //   </FormField>\n      //   <FormField name=\"chol\" htmlFor=\"text-input-id\" label=\"Cholestrol\" onChange={e => setchol(e.target.value)}>\n      //     <input type=\"number\" id=\"chol\" name=\"name\" />\n      //   </FormField>\n      //   <FormField name=\"fbs\" htmlFor=\"text-input-id\" label=\"Fasting Blood Pressure\" onChange={e => setfbs(e.target.value)}>\n      //     <input tyep=\"number\" id=\"fbs\" name=\"name\" />\n      //   </FormField>\n      //   <FormField name=\"slp\" htmlFor=\"text-input-id\" label=\"Slope\" onChange={e => setslp(e.target.value)}>\n      //     <input type=\"number\" id=\"slp\" name=\"name\" />\n      //   </FormField>\n      //   <Box direction=\"row\" gap=\"medium\">\n      //     <Button type=\"submit\" primary label=\"Submit\" />\n      //     <Button type=\"reset\" label=\"Reset\" />\n      //   </Box>\n      // </Form>\n      _jsxDEV(\"div\", {\n        className: \"formCenter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"formFields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"formFieldLabel\",\n              htmlFor: \"name\",\n              children: \"CP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: \"formFieldInput\",\n              placeholder: \"Enter cp\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"formFieldLabel\",\n              htmlFor: \"name\",\n              children: \"TRTBPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: \"formFieldInput\",\n              placeholder: \"Enter trtbps\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"formFieldLabel\",\n              htmlFor: \"name\",\n              children: \"CHOL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: \"formFieldInput\",\n              placeholder: \"Enter cholestrol\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"formFieldLabel\",\n              htmlFor: \"name\",\n              children: \"FBS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: \"formFieldInput\",\n              placeholder: \"Enter fasting blood sugar\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"formFieldLabel\",\n              htmlFor: \"name\",\n              children: \"SLP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: \"formFieldInput\",\n              placeholder: \"Enter SLP\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 5\n      }, this)\n    );\n  }\n\n}\n\nfunction UserDetails(props) {\n  _s3();\n\n  const [value, setValue] = useState({});\n  let accessToken = props.accessToken;\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Authorization\": `Bearer ${accessToken}`\n    }\n  };\n\n  const onSubmit = async () => {\n    try {\n      const response = await axios.get(\"users\", axiosConfig);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    value: value,\n    onReset: () => setValue({}),\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      direction: \"row\",\n      gap: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(UserDetails, \"aWCEBf3ydt6Psy9EuxC8oIyNjmU=\");\n\n_c3 = UserDetails;\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"ECGform\");\n$RefreshReg$(_c3, \"UserDetails\");","map":{"version":3,"names":["React","useState","useEffect","Component","axios","jwt_decode","useNavigate","Navbar","Card","CardBody","CardHeader","CardFooter","Button","Box","Layer","Form","FormField","TextInput","Dashboard","name","setName","token","setToken","expire","setExpire","users","setUsers","accessToken","setAccessToken","navigate","fitbitToken","registerFitbit","axiosConfig","headers","response","get","console","log","error","post","email_id","password","data","access_token","refreshToken","decoded","exp","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","Authorization","Promise","reject","handleUpdateEcg","setUpdateVitals","setShowVitals","setUpdateEcg","handleUpdateVitals","handleDisplayVitals","showVitals","updateVitals","showEcg","ECGform","props","files","setFile","value","setValue","onSubmit","formData","FormData","append","patch","e","target","UserDataForm","constructor","state","email","hasAgreed","handleChange","bind","handleSubmit","event","type","checked","setState","preventDefault","render","UserDetails"],"sources":["C:/Users/mujoo/OneDrive/Documents/GitHub/CapstoneProject/webapp/client/src/components/Dashboard.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Component } from 'react'\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport {Card,CardBody,CardHeader,CardFooter,Button,Box,Layer,Form,FormField,TextInput} from \"grommet\";\r\n\r\n \r\nexport const Dashboard = () => {\r\n    const [name, setName] = useState('');\r\n    const [token, setToken] = useState('');\r\n    const [expire, setExpire] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [accessToken,setAccessToken] = useState('');\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        fitbitToken();\r\n        registerFitbit();\r\n        //refreshToken();\r\n        //getUsers();\r\n        \r\n        // axios.get('fitbit_register',axiosConfig).then((res) =>\r\n        //     {\r\n        //       console.log(res.data);\r\n        //     });\r\n    }, []);\r\n \r\n    \r\n    const registerFitbit = async () => {\r\n        let axiosConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Authorization\": `Bearer ${accessToken}`,\r\n            }\r\n          };\r\n        try {\r\n            const response = await axios.get(\"fitbit_register\",axiosConfig);\r\n            //setAccessToken(response.data.accessToken);\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const fitbitToken = async () => {\r\n        try {\r\n            const response = await axios.post(\"login\",{\r\n                email_id: \"arko.pal2000@gmail.com\",\r\n                password: \"12345\"\r\n            });\r\n            //setAccessToken(response.data.accessToken);\r\n            console.log(response.data.access_token);\r\n            setAccessToken(response.data.access_token);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        }\r\n    \r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/token');\r\n            // console.log('hello');\r\n            // console.log(response);\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setName(decoded.name);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n    }\r\n \r\n    const axiosJWT = axios.create();\r\n \r\n    axiosJWT.interceptors.request.use(async (config) => {\r\n        const currentDate = new Date();\r\n        if (expire * 1000 < currentDate.getTime()) {\r\n            const response = await axios.get('http://localhost:5000/token');\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setName(decoded.name);\r\n            setExpire(decoded.exp);\r\n        }\r\n        return config;\r\n    }, (error) => {\r\n        return Promise.reject(error);\r\n    });\r\n \r\n    // const getUsers = async () => {\r\n    //     const response = await axiosJWT.get('http://localhost:5000/users', {\r\n    //         headers: {\r\n    //             Authorization: `Bearer ${token}`\r\n    //         }\r\n    //     });\r\n    //     setUsers(response.data);\r\n    //}\r\n    const handleUpdateEcg = async() => {\r\n      setUpdateVitals(false);\r\n      setShowVitals(false);\r\n      setUpdateEcg(true);\r\n    }\r\n    const handleUpdateVitals = async() => {\r\n      setUpdateVitals(true);\r\n      setShowVitals(false);\r\n      setUpdateEcg(false);\r\n        \r\n    }\r\n    const handleDisplayVitals = async() => {\r\n      setShowVitals(true);\r\n      setUpdateEcg(false);\r\n      setUpdateVitals(false);\r\n    }\r\n\r\n    const [showVitals,setShowVitals] = useState(true);\r\n    const [updateVitals,setUpdateVitals] = useState(false);\r\n    const [showEcg,setUpdateEcg] = useState(false);\r\n    return (\r\n        <Box>\r\n          <Box direction='row' gap='medium'>\r\n          <Box>\r\n            <Button label=\"Display Vitals\" onClick={handleDisplayVitals}></Button>\r\n          </Box>\r\n          <Box>\r\n            <Button label='Update Vitals' onClick={handleUpdateVitals}></Button>\r\n          </Box>\r\n          <Box>\r\n            <Button label='Update ECG' onClick={handleUpdateEcg}></Button>\r\n          </Box>\r\n          </Box>\r\n            {updateVitals && (\r\n            <Box>\r\n            <UserDataForm accessToken={accessToken} />\r\n            </Box>\r\n            \r\n            )}\r\n            {showEcg && (\r\n            <Box>\r\n                <ECGform accessToken={accessToken}/>\r\n            </Box>\r\n            )}\r\n            {showVitals && (\r\n            <Box>\r\n              <UserDetails accessToken={accessToken}/>\r\n            </Box>\r\n            )}\r\n        </Box>\r\n        \r\n    )\r\n}\r\nconst ECGform = (props) => {\r\n    let accessToken = props.accessToken;\r\n    let axiosConfig = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Authorization\": `Bearer ${accessToken}`,\r\n        }\r\n      };\r\n      const [files,setFile] = useState(null);\r\n      const [value,setValue] = useState({});\r\n      const onSubmit = async() => {\r\n        try{\r\n            var formData = new FormData();\r\n            formData.append('file',files[0]);\r\n\r\n            const response = await axios.patch(\"ecg\",formData,axiosConfig);\r\n            console.log(response);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n      }\r\n\r\n      return (  \r\n      \r\n\r\n      <Form\r\n      value={value}\r\n      onReset={() => setValue({})}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <FormField name=\"ecg\" htmlFor=\"text-input-id\" label=\"ECG REPORT\" onChange={e => setFile(e.target.files)}>\r\n        <input type=\"file\" id=\"ecg\" name=\"ecg\" />\r\n      </FormField>\r\n      <Box direction=\"row\" gap=\"medium\">\r\n        <Button type=\"submit\" primary label=\"Submit\" />\r\n        <Button type=\"reset\" label=\"Reset\" />\r\n      </Box>\r\n    </Form>\r\n  );\r\n}\r\n// const UserDataForm = (props) => {\r\n    \r\n    // const [cp, setcp] = React.useState();\r\n    // const [trtbps, settrtbps] = React.useState();\r\n    // const [chol, setchol] = React.useState();\r\n    // const [fbs, setfbs] = React.useState();\r\n    // const [slp, setslp] = React.useState();\r\n    // const [value,setValue] = useState({});\r\n    //  let accessToken = props.accessToken;\r\n    \r\n    // let axiosConfig = {\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json;charset=UTF-8',\r\n    //         \"Access-Control-Allow-Origin\": \"*\",\r\n    //         \"Authorization\": `Bearer ${accessToken}`,\r\n    //     }\r\n    //   };\r\n    \r\n    \r\n    //   const onSubmit = async() => {\r\n    //     try{\r\n    //     const response = await axios.post(\"user_attr\", {\r\n    //         'cp': cp,\r\n    //         'trtbps': trtbps,\r\n    //         'chol': chol,\r\n    //         'fbs': fbs,\r\n    //         'slp': slp,\r\n    //     }, axiosConfig)\r\n    //     console.log(response);\r\n    //     }\r\n    //     catch(error){\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n    //\r\n    class UserDataForm extends Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        hasAgreed: false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      let target = event.target;\r\n      let value = target.type === \"checkbox\" ? target.checked : target.value;\r\n      let name = target.name;\r\n  \r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n  \r\n      console.log(\"The form was submitted with the following data:\");\r\n      console.log(this.state);\r\n    }\r\n  //\r\n  render(){\r\n  return (\r\n    // <Form\r\n    //   value={value}\r\n    //   onReset={() => setValue({})}\r\n    //   onSubmit={onSubmit}\r\n    // >\r\n    //   <FormField name=\"cp\" htmlFor=\"text-input-id\" label=\"Chest Pain\" onChange={e => setcp(e.target.value)}>\r\n    //     <input type=\"number\" id=\"cp\" name=\"name\" />\r\n    //   </FormField>\r\n    //   <FormField name=\"trtbps\" htmlFor=\"text-input-id\" label=\"Blood Pressure\" onChange={e => settrtbps(e.target.value)}>\r\n    //     <input type=\"number\" id=\"trtbps\" name=\"name\" />\r\n    //   </FormField>\r\n    //   <FormField name=\"chol\" htmlFor=\"text-input-id\" label=\"Cholestrol\" onChange={e => setchol(e.target.value)}>\r\n    //     <input type=\"number\" id=\"chol\" name=\"name\" />\r\n    //   </FormField>\r\n    //   <FormField name=\"fbs\" htmlFor=\"text-input-id\" label=\"Fasting Blood Pressure\" onChange={e => setfbs(e.target.value)}>\r\n    //     <input tyep=\"number\" id=\"fbs\" name=\"name\" />\r\n    //   </FormField>\r\n    //   <FormField name=\"slp\" htmlFor=\"text-input-id\" label=\"Slope\" onChange={e => setslp(e.target.value)}>\r\n    //     <input type=\"number\" id=\"slp\" name=\"name\" />\r\n    //   </FormField>\r\n    //   <Box direction=\"row\" gap=\"medium\">\r\n    //     <Button type=\"submit\" primary label=\"Submit\" />\r\n    //     <Button type=\"reset\" label=\"Reset\" />\r\n    //   </Box>\r\n    // </Form>\r\n    <div className=\"formCenter\">\r\n        <form onSubmit={this.handleSubmit} className=\"formFields\">\r\n          <div>\r\n            <br/>\r\n          </div>\r\n\r\n          <div className=\"formField\">\r\n            <label className=\"formFieldLabel\" htmlFor=\"name\">\r\n              CP\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"formFieldInput\"\r\n              placeholder=\"Enter cp\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"formField\">\r\n            <label className=\"formFieldLabel\" htmlFor=\"name\">\r\n              TRTBPS\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"formFieldInput\"\r\n              placeholder=\"Enter trtbps\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"formField\">\r\n            <label className=\"formFieldLabel\" htmlFor=\"name\">\r\n              CHOL\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"formFieldInput\"\r\n              placeholder=\"Enter cholestrol\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"formField\">\r\n            <label className=\"formFieldLabel\" htmlFor=\"name\">\r\n              FBS\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"formFieldInput\"\r\n              placeholder=\"Enter fasting blood sugar\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"formField\">\r\n            <label className=\"formFieldLabel\" htmlFor=\"name\">\r\n              SLP\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"formFieldInput\"\r\n              placeholder=\"Enter SLP\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          \r\n          </form>\r\n          </div>\r\n  );\r\n  }\r\n}\r\n\r\n\r\nfunction UserDetails(props){\r\n  const [value,setValue] = useState({});\r\n  let accessToken = props.accessToken;\r\n  let axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Authorization\": `Bearer ${accessToken}`,\r\n    }\r\n  };\r\n  const onSubmit = async() => {\r\n    try{\r\n      const response = await axios.get(\"users\",axiosConfig)\r\n      console.log(response);\r\n      }\r\n      catch(error){\r\n          console.log(error);\r\n      }\r\n  }\r\n  return (\r\n    <Form\r\n      value={value}\r\n      onReset={() => setValue({})}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Box direction=\"row\" gap=\"medium\">\r\n        {/* <Button type=\"submit\" primary label=\"Get User Details\" /> */}\r\n      </Box>\r\n    </Form>\r\n  );\r\n}\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}